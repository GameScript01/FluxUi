local FluxUI = {}
FluxUI.__index = FluxUI

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

function FluxUI:Window(title, subtitle, themeColor, toggleKey)
    local Window = {}
    Window.__index = Window
    Window.Tabs = {}

    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "FluxUI"
    ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ResetOnSpawn = false

    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    MainFrame.Size = UDim2.new(0, 500, 0, 300)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -150)

    local UICorner = Instance.new("UICorner", MainFrame)
    UICorner.CornerRadius = UDim.new(0, 6)

    local Topbar = Instance.new("Frame")
    Topbar.Name = "Topbar"
    Topbar.Parent = MainFrame
    Topbar.Size = UDim2.new(1, 0, 0, 40)
    Topbar.BackgroundColor3 = themeColor or Color3.fromRGB(255, 110, 48)

    local Title = Instance.new("TextLabel")
    Title.Parent = Topbar
    Title.BackgroundTransparency = 1
    Title.Size = UDim2.new(1, -10, 1, 0)
    Title.Position = UDim2.new(0, 10, 0, 0)
    Title.Font = Enum.Font.GothamBold
    Title.Text = title .. " - " .. (subtitle or "")
    Title.TextColor3 = Color3.new(1,1,1)
    Title.TextSize = 14
    Title.TextXAlignment = Enum.TextXAlignment.Left

    local TabHolder = Instance.new("Frame")
    TabHolder.Parent = MainFrame
    TabHolder.BackgroundColor3 = Color3.fromRGB(25,25,25)
    TabHolder.Size = UDim2.new(0,120,1,-40)
    TabHolder.Position = UDim2.new(0,0,0,40)

    local UIListLayout = Instance.new("UIListLayout", TabHolder)
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

    local PageHolder = Instance.new("Frame")
    PageHolder.Parent = MainFrame
    PageHolder.BackgroundColor3 = Color3.fromRGB(30,30,30)
    PageHolder.Size = UDim2.new(1,-120,1,-40)
    PageHolder.Position = UDim2.new(0,120,0,40)

    function Window:Tab(name, icon)
        local Tab = {}
        Tab.__index = Tab
        Tab.Buttons = {}

        local TabButton = Instance.new("TextButton")
        TabButton.Parent = TabHolder
        TabButton.Text = name
        TabButton.Size = UDim2.new(1,0,0,30)
        TabButton.BackgroundColor3 = Color3.fromRGB(35,35,35)
        TabButton.TextColor3 = Color3.fromRGB(255,255,255)
        TabButton.Font = Enum.Font.Gotham
        TabButton.TextSize = 12

        if typeof(icon) == "string" and icon ~= "" then
            local IconImg = Instance.new("ImageLabel")
            IconImg.Parent = TabButton
            IconImg.Size = UDim2.new(0,18,0,18)
            IconImg.Position = UDim2.new(0,5,0.5,-9)
            IconImg.BackgroundTransparency = 1
            IconImg.Image = icon
            TabButton.TextXAlignment = Enum.TextXAlignment.Left
            TabButton.Text = "     " .. name
        end

        local Page = Instance.new("ScrollingFrame")
        Page.Parent = PageHolder
        Page.Size = UDim2.new(1,0,1,0)
        Page.BackgroundTransparency = 1
        Page.Visible = false
        Page.ScrollBarThickness = 4

        local UIList = Instance.new("UIListLayout", Page)
        UIList.Padding = UDim.new(0,5)
        UIList.SortOrder = Enum.SortOrder.LayoutOrder

        Tab.Page = Page

        function Tab:Show()
            for _, p in pairs(PageHolder:GetChildren()) do
                if p:IsA("ScrollingFrame") then
                    p.Visible = false
                end
            end
            Page.Visible = true
        end

        TabButton.MouseButton1Click:Connect(function()
            Tab:Show()
        end)

        function Tab:Button(text, callback)
            local Btn = Instance.new("TextButton")
            Btn.Parent = Page
            Btn.Size = UDim2.new(1,-10,0,30)
            Btn.BackgroundColor3 = Color3.fromRGB(40,40,40)
            Btn.Text = text
            Btn.TextColor3 = Color3.fromRGB(255,255,255)
            Btn.Font = Enum.Font.Gotham
            Btn.TextSize = 12

            Btn.MouseButton1Click:Connect(function()
                pcall(callback)
            end)
        end

        function Tab:Textbox(placeholder, clearOnFocus, callback)
            local Box = Instance.new("TextBox")
            Box.Parent = Page
            Box.Size = UDim2.new(1,-10,0,30)
            Box.BackgroundColor3 = Color3.fromRGB(40,40,40)
            Box.PlaceholderText = placeholder
            Box.Text = ""
            Box.TextColor3 = Color3.fromRGB(255,255,255)
            Box.Font = Enum.Font.Gotham
            Box.TextSize = 12
            Box.ClearTextOnFocus = clearOnFocus or false

            Box.FocusLost:Connect(function(enter)
                if enter and callback then
                    pcall(callback, Box.Text)
                end
            end)
        end

        return setmetatable(Tab, Tab)
    end

    if toggleKey then
        UserInputService.InputBegan:Connect(function(input,gp)
            if not gp and input.KeyCode == toggleKey then
                MainFrame.Visible = not MainFrame.Visible
            end
        end)
    end

    return setmetatable(Window, Window)
end

return setmetatable(FluxUI, FluxUI)
